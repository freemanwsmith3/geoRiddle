{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/geoRiddle/react/geoapi/src/components/Strikes.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  listResults: {\n    padding: '0px'\n  },\n  suggestion: {\n    cursor: 'pointer',\n    borderLeft: '1px solid black',\n    borderRight: '1px solid black',\n    borderBottom: '1px solid black',\n    borderTop: '1px solid black',\n    background: 'white',\n    '&:hover': {\n      background: \"gray\"\n    }\n  },\n  correct: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    fontSize: '24px',\n    textAlign: 'center',\n    marginBottom: '0px',\n    color: 'green',\n    borderColor: 'green',\n    borderLeft: '1px solid ',\n    borderRight: '1px solid ',\n    borderBottom: '1px solid ',\n    borderTop: '1px solid '\n  },\n  blank: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    fontSize: '24px',\n    textAlign: 'center',\n    marginBottom: '0px',\n    color: 'black',\n    borderColor: 'black',\n    borderLeft: '1px solid ',\n    borderRight: '1px solid ',\n    borderBottom: '1px solid ',\n    borderTop: '1px solid '\n  }\n}));\nconst Results = props => {\n  _s();\n  const {\n    strikes\n  } = props;\n  console.log(results);\n  console.log('ok', answers.answers[0].name);\n  const classes = useStyles();\n  console.log('history: ', history[0]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      component: \"main\",\n      children: strikes.map((strike, index) => {\n        /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.listResults,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.listResults,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classes.correct,\n              children: strike.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n_s(Results, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","makeStyles","Container","Card","CardContent","useStyles","theme","listResults","padding","suggestion","cursor","borderLeft","borderRight","borderBottom","borderTop","background","correct","display","justifyContent","alignItems","fontSize","textAlign","marginBottom","color","borderColor","blank","Results","props","strikes","console","log","results","answers","name","classes","history","map","strike","index"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/components/Strikes.js"],"sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst useStyles = makeStyles((theme) => ({\n    listResults: {\n        padding: '0px',\n    },\n\n\tsuggestion: {\n        \n\t\tcursor: 'pointer',\n        borderLeft: '1px solid black',\n        borderRight: '1px solid black',\n        borderBottom: '1px solid black',\n        borderTop: '1px solid black',\n        background: 'white',\n        '&:hover': {\n            background: \"gray\",\n        }\n\t},\n\n    correct: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        fontSize: '24px',\n        textAlign: 'center',\n        marginBottom:  '0px',\n        color: 'green',\n        borderColor: 'green',\n        borderLeft: '1px solid ',\n        borderRight: '1px solid ',\n        borderBottom: '1px solid ',\n        borderTop: '1px solid ',\n    },\n\n    blank: {\n        \n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        fontSize: '24px',\n        textAlign: 'center',\n        marginBottom: '0px',\n        color: 'black',\n        borderColor: 'black',\n        borderLeft: '1px solid ',\n        borderRight: '1px solid ',\n        borderBottom: '1px solid ',\n        borderTop: '1px solid ',\n    },\n\n\n}));\n\nconst Results = (props) => {\n\n\n    const { strikes } = props;\n    console.log(results)\n    console.log('ok', answers.answers[0].name)\n    const classes = useStyles();\n    console.log('history: ', history[0])\n\n    return (\n\t\t<React.Fragment>                    \n            <Container maxWidth=\"md\" component=\"main\" >            \n            {strikes.map((strike, index) => {   \n                <Card  className= {classes.listResults} >\n                    <CardContent className= {classes.listResults}>\n                        <li className={classes.correct} >{strike.name}</li> \n                    </CardContent>\n                </Card>\n            })}\n            </Container>  \n        </React.Fragment>\n    );\n};\n\nexport default Results"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,+BAA+B;AAAC;AAExD,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAK,KAAM;EACrCC,WAAW,EAAE;IACTC,OAAO,EAAE;EACb,CAAC;EAEJC,UAAU,EAAE;IAEXC,MAAM,EAAE,SAAS;IACXC,UAAU,EAAE,iBAAiB;IAC7BC,WAAW,EAAE,iBAAiB;IAC9BC,YAAY,EAAE,iBAAiB;IAC/BC,SAAS,EAAE,iBAAiB;IAC5BC,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;MACPA,UAAU,EAAE;IAChB;EACP,CAAC;EAEEC,OAAO,EAAE;IACLC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,UAAU;IACtBC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAG,KAAK;IACpBC,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE,OAAO;IACpBb,UAAU,EAAE,YAAY;IACxBC,WAAW,EAAE,YAAY;IACzBC,YAAY,EAAE,YAAY;IAC1BC,SAAS,EAAE;EACf,CAAC;EAEDW,KAAK,EAAE;IAEHR,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,UAAU;IACtBC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE,KAAK;IACnBC,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE,OAAO;IACpBb,UAAU,EAAE,YAAY;IACxBC,WAAW,EAAE,YAAY;IACzBC,YAAY,EAAE,YAAY;IAC1BC,SAAS,EAAE;EACf;AAGJ,CAAC,CAAC,CAAC;AAEH,MAAMY,OAAO,GAAIC,KAAK,IAAK;EAAA;EAGvB,MAAM;IAAEC;EAAQ,CAAC,GAAGD,KAAK;EACzBE,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;EACpBF,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEE,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;EAC1C,MAAMC,OAAO,GAAG7B,SAAS,EAAE;EAC3BwB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEK,OAAO,CAAC,CAAC,CAAC,CAAC;EAEpC,oBACF,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACL,QAAC,SAAS;MAAC,QAAQ,EAAC,IAAI;MAAC,SAAS,EAAC,MAAM;MAAA,UACxCP,OAAO,CAACQ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QAC5B,qBAAC,IAAI;UAAE,SAAS,EAAGJ,OAAO,CAAC3B,WAAY;UAAA,uBACnC,QAAC,WAAW;YAAC,SAAS,EAAG2B,OAAO,CAAC3B,WAAY;YAAA,uBACzC;cAAI,SAAS,EAAE2B,OAAO,CAAClB,OAAQ;cAAA,UAAGqB,MAAM,CAACJ;YAAI;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA;QACzC;UAAA;UAAA;UAAA;QAAA,QACX;MACX,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACU;IAAA;IAAA;IAAA;EAAA,QACC;AAEzB,CAAC;AAAC,GAtBIP,OAAO;EAAA,QAMOrB,SAAS;AAAA;AAAA,KANvBqB,OAAO;AAwBb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}