{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/geoRiddle/react/geoapi/src/components/Strikes.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  listResults: {\n    padding: '0px'\n  },\n  incorrect: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    fontSize: '24px',\n    textAlign: 'center',\n    marginBottom: '0px',\n    color: 'red',\n    borderColor: 'red',\n    borderLeft: '1px solid ',\n    borderRight: '1px solid ',\n    borderBottom: '1px solid ',\n    borderTop: '1px solid '\n  }\n}));\nconst Results = props => {\n  _s();\n  const {\n    answers,\n    history,\n    strikes\n  } = props;\n  const classes = useStyles();\n  console.log(answers.answers['name'].includes('Uganda'));\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: history.map((hist, index) => {\n        return answers.answers.includes(hist) ? /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.listResults,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.listResults,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classes.incorrect,\n              children: hist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.listResults,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.listResults,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classes.blank,\n              children: [\"Country number \", index + 1]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n_s(Results, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","makeStyles","Container","Card","CardContent","useStyles","theme","listResults","padding","incorrect","display","justifyContent","alignItems","fontSize","textAlign","marginBottom","color","borderColor","borderLeft","borderRight","borderBottom","borderTop","Results","props","answers","history","strikes","classes","console","log","includes","map","hist","index","blank"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/components/Strikes.js"],"sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst useStyles = makeStyles((theme) => ({\n    listResults: {\n        padding: '0px',\n    },\n\n\n    incorrect: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        fontSize: '24px',\n        textAlign: 'center',\n        marginBottom:  '0px',\n        color: 'red',\n        borderColor: 'red',\n        borderLeft: '1px solid ',\n        borderRight: '1px solid ',\n        borderBottom: '1px solid ',\n        borderTop: '1px solid ',\n    },\n\n\n\n}));\n\nconst Results = (props) => {\n\n\tconst { answers, history, strikes } = props;\n\n\n    const classes = useStyles();\n    console.log(answers.answers['name'].includes('Uganda'))\n\n    return (\n\t\t<React.Fragment>                    \n            <Container maxWidth=\"md\"  >  \n                \n                {history.map((hist, index) => {   \n                    return answers.answers.includes(hist) ? ( \n                        <Card  className= {classes.listResults} >\n                            <CardContent className= {classes.listResults}>\n                                <li className={classes.incorrect} >{hist}</li> \n                            </CardContent>\n                        </Card>\n                    ) :(\n                        <Card  className= {classes.listResults}>\n                            <CardContent className= {classes.listResults}>\n                                <li className={classes.blank} key={index}>Country number {index+1}</li>\n                            </CardContent>\n                        </Card>\n                        )\n                        })}\n                </Container>  \n        </React.Fragment>\n    );\n};\n\nexport default Results"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,+BAA+B;AAAC;AAExD,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAK,KAAM;EACrCC,WAAW,EAAE;IACTC,OAAO,EAAE;EACb,CAAC;EAGDC,SAAS,EAAE;IACPC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,UAAU;IACtBC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAG,KAAK;IACpBC,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE,KAAK;IAClBC,UAAU,EAAE,YAAY;IACxBC,WAAW,EAAE,YAAY;IACzBC,YAAY,EAAE,YAAY;IAC1BC,SAAS,EAAE;EACf;AAIJ,CAAC,CAAC,CAAC;AAEH,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EAE1B,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGH,KAAK;EAGxC,MAAMI,OAAO,GAAGtB,SAAS,EAAE;EAC3BuB,OAAO,CAACC,GAAG,CAACL,OAAO,CAACA,OAAO,CAAC,MAAM,CAAC,CAACM,QAAQ,CAAC,QAAQ,CAAC,CAAC;EAEvD,oBACF,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACL,QAAC,SAAS;MAAC,QAAQ,EAAC,IAAI;MAAA,UAEnBL,OAAO,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC1B,OAAOT,OAAO,CAACA,OAAO,CAACM,QAAQ,CAACE,IAAI,CAAC,gBACjC,QAAC,IAAI;UAAE,SAAS,EAAGL,OAAO,CAACpB,WAAY;UAAA,uBACnC,QAAC,WAAW;YAAC,SAAS,EAAGoB,OAAO,CAACpB,WAAY;YAAA,uBACzC;cAAI,SAAS,EAAEoB,OAAO,CAAClB,SAAU;cAAA,UAAGuB;YAAI;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA;QACpC;UAAA;UAAA;UAAA;QAAA,QACX,gBAEP,QAAC,IAAI;UAAE,SAAS,EAAGL,OAAO,CAACpB,WAAY;UAAA,uBACnC,QAAC,WAAW;YAAC,SAAS,EAAGoB,OAAO,CAACpB,WAAY;YAAA,uBACzC;cAAI,SAAS,EAAEoB,OAAO,CAACO,KAAM;cAAA,WAAa,iBAAe,EAACD,KAAK,GAAC,CAAC;YAAA,GAA9BA,KAAK;cAAA;cAAA;cAAA;YAAA;UAA+B;YAAA;YAAA;YAAA;UAAA;QAC7D;UAAA;UAAA;UAAA;QAAA,QAEjB;MACD,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACH;AAEzB,CAAC;AAAC,GA9BIX,OAAO;EAAA,QAKOjB,SAAS;AAAA;AAAA,KALvBiB,OAAO;AAgCb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}