{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/geoRiddle/react/geoapi/src/components/Guess.js\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n  },\n\n  link: {\n    margin: theme.spacing(1, 1.5)\n  },\n  cardHeader: {\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700]\n  },\n  countryName: {\n    fontSize: '16px',\n    textAlign: 'left'\n  },\n  countryCapital: {\n    display: 'flex',\n    justifyContent: 'left',\n    alignItems: 'baseline',\n    fontSize: '12px',\n    textAlign: 'left',\n    marginBottom: theme.spacing(2)\n  }\n}));\nconst Guess = (props, text) => {\n  const {\n    countries\n  } = props;\n  if (!countries || countries.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Can not find any countries, sorry\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 51\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      component: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-name\",\n        label: \"Name\",\n        value: name,\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-uncontrolled\",\n        label: \"Uncontrolled\",\n        defaultValue: \"foo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n_c = Guess;\nexport default Guess;\nvar _c;\n$RefreshReg$(_c, \"Guess\");","map":{"version":3,"names":["React","useEffect","makeStyles","TextField","Container","useStyles","theme","cardMedia","paddingTop","link","margin","spacing","cardHeader","backgroundColor","palette","type","grey","countryName","fontSize","textAlign","countryCapital","display","justifyContent","alignItems","marginBottom","Guess","props","text","countries","length","name","onChangeHandler"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/components/Guess.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField'\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles((theme) => ({\n\tcardMedia: {\n\t\tpaddingTop: '56.25%', // 16:9\n\t},\n\tlink: {\n\t\tmargin: theme.spacing(1, 1.5),\n\t},\n\tcardHeader: {\n\t\tbackgroundColor:\n\t\t\ttheme.palette.type === 'light'\n\t\t\t\t? theme.palette.grey[200]\n\t\t\t\t: theme.palette.grey[700],\n\t},\n\tcountryName: {\n\t\tfontSize: '16px',\n\t\ttextAlign: 'left',\n\t},\n\tcountryCapital: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'left',\n\t\talignItems: 'baseline',\n\t\tfontSize: '12px',\n\t\ttextAlign: 'left',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n}));\n\nconst Guess = (props, text) => {\n\t\n\tconst { countries } = props;\n\n\n\n\tif (!countries || countries.length === 0) return <p>Can not find any countries, sorry</p>;\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Container maxWidth=\"md\" component=\"main\">\n            <TextField\n                id=\"outlined-name\"\n                label=\"Name\"\n                value={name}\n                onChange={onChangeHandler}\n                />\n                <TextField\n                id=\"outlined-uncontrolled\"\n                label=\"Uncontrolled\"\n                defaultValue=\"foo\"\n                />\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n};\nexport default Guess;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,SAAS,MAAM,6BAA6B;AAAC;AAGpD,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAK,KAAM;EACxCC,SAAS,EAAE;IACVC,UAAU,EAAE,QAAQ,CAAE;EACvB,CAAC;;EACDC,IAAI,EAAE;IACLC,MAAM,EAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC,EAAE,GAAG;EAC7B,CAAC;EACDC,UAAU,EAAE;IACXC,eAAe,EACdP,KAAK,CAACQ,OAAO,CAACC,IAAI,KAAK,OAAO,GAC3BT,KAAK,CAACQ,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC,GACvBV,KAAK,CAACQ,OAAO,CAACE,IAAI,CAAC,GAAG;EAC3B,CAAC;EACDC,WAAW,EAAE;IACZC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE;EACZ,CAAC;EACDC,cAAc,EAAE;IACfC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,MAAM;IACtBC,UAAU,EAAE,UAAU;IACtBL,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,MAAM;IACjBK,YAAY,EAAElB,KAAK,CAACK,OAAO,CAAC,CAAC;EAC9B;AACD,CAAC,CAAC,CAAC;AAEH,MAAMc,KAAK,GAAG,CAACC,KAAK,EAAEC,IAAI,KAAK;EAE9B,MAAM;IAAEC;EAAU,CAAC,GAAGF,KAAK;EAI3B,IAAI,CAACE,SAAS,IAAIA,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,oBAAO;IAAA,UAAG;EAAiC;IAAA;IAAA;IAAA;EAAA,QAAI;EACzF,oBACC,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACd,QAAC,SAAS;MAAC,QAAQ,EAAC,IAAI;MAAC,SAAS,EAAC,MAAM;MAAA,wBAChC,QAAC,SAAS;QACN,EAAE,EAAC,eAAe;QAClB,KAAK,EAAC,MAAM;QACZ,KAAK,EAAEC,IAAK;QACZ,QAAQ,EAAEC;MAAgB;QAAA;QAAA;QAAA;MAAA,QACxB,eACF,QAAC,SAAS;QACV,EAAE,EAAC,uBAAuB;QAC1B,KAAK,EAAC,cAAc;QACpB,YAAY,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAChB;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACI;AAEnB,CAAC;AAAC,KAxBIN,KAAK;AAyBX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}