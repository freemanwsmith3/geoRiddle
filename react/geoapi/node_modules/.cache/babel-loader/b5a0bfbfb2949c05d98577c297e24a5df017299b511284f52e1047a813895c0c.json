{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/geoRiddle/react/geoapi/src/components/Results.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  suggestion: {\n    cursor: 'pointer',\n    borderLeft: '1px solid black',\n    borderRight: '1px solid black',\n    borderBottom: '1px solid black',\n    borderTop: '1px solid black',\n    background: 'white',\n    '&:hover': {\n      background: \"gray\"\n    }\n  },\n  correct: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    fontSize: '24px',\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    color: 'green',\n    borderColor: 'green',\n    borderLeft: '1px solid ',\n    borderRight: '1px solid ',\n    borderBottom: '1px solid ',\n    borderTop: '1px solid '\n  },\n  incorrect: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    fontSize: '24px',\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    color: 'red',\n    borderColor: 'red',\n    borderLeft: '1px solid ',\n    borderRight: '1px solid ',\n    borderBottom: '1px solid ',\n    borderTop: '1px solid '\n  }\n}));\nconst Results = props => {\n  _s();\n  const {\n    history\n  } = props;\n  const {\n    results\n  } = props;\n  const {\n    answers\n  } = props;\n  console.log(results);\n  console.log('ok', answers.answers[0].name);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      component: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.result,\n          children: answers.answers.map((ans, index) => {\n            return ans.name == history[index] ? /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classes.correct,\n              children: history[index]\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classes.incorrect,\n              children: history[index]\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n_s(Results, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useEffect","useState","makeStyles","TextField","Container","Typography","Button","Card","CardContent","Grid","useStyles","theme","suggestion","cursor","borderLeft","borderRight","borderBottom","borderTop","background","correct","display","justifyContent","alignItems","fontSize","textAlign","marginBottom","spacing","color","borderColor","incorrect","Results","props","history","results","answers","console","log","name","classes","result","map","ans","index"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/components/Results.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField'\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n\tsuggestion: {\n        \n\t\tcursor: 'pointer',\n        borderLeft: '1px solid black',\n        borderRight: '1px solid black',\n        borderBottom: '1px solid black',\n        borderTop: '1px solid black',\n        background: 'white',\n        '&:hover': {\n            background: \"gray\",\n        }\n\t},\n\n    correct: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        fontSize: '24px',\n        textAlign: 'center',\n        marginBottom: theme.spacing(2),\n        color: 'green',\n        borderColor: 'green',\n        borderLeft: '1px solid ',\n        borderRight: '1px solid ',\n        borderBottom: '1px solid ',\n        borderTop: '1px solid ',\n    },\n\n    incorrect: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        fontSize: '24px',\n        textAlign: 'center',\n        marginBottom: theme.spacing(2),\n        color: 'red',\n        borderColor: 'red',\n        borderLeft: '1px solid ',\n        borderRight: '1px solid ',\n        borderBottom: '1px solid ',\n        borderTop: '1px solid ',\n    }, \n\n\n}));\n\nconst Results = (props) => {\n\n\tconst { history } = props;\n    const { results } = props;\n    const { answers } = props;\n    console.log(results)\n    console.log('ok', answers.answers[0].name)\n    const classes = useStyles();\n\n    return (\n\t\t<React.Fragment>\n\n\t\t\t<Container maxWidth=\"md\" component=\"main\" >\n                <Card >\n                    <CardContent className= {classes.result}>\n                        {answers.answers.map((ans, index) => {    \n                            return ans.name == history[index] ? ( \n                                <li  className={classes.correct} key = {index}>{history[index]}</li> \n                                ) :(\n                                <li  className={classes.incorrect} key = {index}>{history[index]}</li>\n                            )\n                        })}\n                    </CardContent>\n                </Card>\n            </Container>\n        </React.Fragment>\n    );\n};\n\nexport default Results"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,IAAI,MAAM,wBAAwB;AAAC;AAE1C,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAK,KAAM;EACxCC,UAAU,EAAE;IAEXC,MAAM,EAAE,SAAS;IACXC,UAAU,EAAE,iBAAiB;IAC7BC,WAAW,EAAE,iBAAiB;IAC9BC,YAAY,EAAE,iBAAiB;IAC/BC,SAAS,EAAE,iBAAiB;IAC5BC,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;MACPA,UAAU,EAAE;IAChB;EACP,CAAC;EAEEC,OAAO,EAAE;IACLC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,UAAU;IACtBC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAEd,KAAK,CAACe,OAAO,CAAC,CAAC,CAAC;IAC9BC,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE,OAAO;IACpBd,UAAU,EAAE,YAAY;IACxBC,WAAW,EAAE,YAAY;IACzBC,YAAY,EAAE,YAAY;IAC1BC,SAAS,EAAE;EACf,CAAC;EAEDY,SAAS,EAAE;IACPT,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,UAAU;IACtBC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAEd,KAAK,CAACe,OAAO,CAAC,CAAC,CAAC;IAC9BC,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE,KAAK;IAClBd,UAAU,EAAE,YAAY;IACxBC,WAAW,EAAE,YAAY;IACzBC,YAAY,EAAE,YAAY;IAC1BC,SAAS,EAAE;EACf;AAGJ,CAAC,CAAC,CAAC;AAEH,MAAMa,OAAO,GAAIC,KAAK,IAAK;EAAA;EAE1B,MAAM;IAAEC;EAAQ,CAAC,GAAGD,KAAK;EACtB,MAAM;IAAEE;EAAQ,CAAC,GAAGF,KAAK;EACzB,MAAM;IAAEG;EAAQ,CAAC,GAAGH,KAAK;EACzBI,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACpBE,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEF,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC;EAC1C,MAAMC,OAAO,GAAG5B,SAAS,EAAE;EAE3B,oBACF,QAAC,KAAK,CAAC,QAAQ;IAAA,uBAEd,QAAC,SAAS;MAAC,QAAQ,EAAC,IAAI;MAAC,SAAS,EAAC,MAAM;MAAA,uBAC5B,QAAC,IAAI;QAAA,uBACD,QAAC,WAAW;UAAC,SAAS,EAAG4B,OAAO,CAACC,MAAO;UAAA,UACnCL,OAAO,CAACA,OAAO,CAACM,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;YACjC,OAAOD,GAAG,CAACJ,IAAI,IAAIL,OAAO,CAACU,KAAK,CAAC,gBAC7B;cAAK,SAAS,EAAEJ,OAAO,CAACnB,OAAQ;cAAA,UAAgBa,OAAO,CAACU,KAAK;YAAC,GAAtBA,KAAK;cAAA;cAAA;cAAA;YAAA,QAAuB,gBAEpE;cAAK,SAAS,EAAEJ,OAAO,CAACT,SAAU;cAAA,UAAgBG,OAAO,CAACU,KAAK;YAAC,GAAtBA,KAAK;cAAA;cAAA;cAAA;YAAA,QAClD;UACL,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MACQ;QAAA;QAAA;QAAA;MAAA;IACX;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACC;AAEzB,CAAC;AAAC,GA3BIZ,OAAO;EAAA,QAOOpB,SAAS;AAAA;AAAA,KAPvBoB,OAAO;AA6Bb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}