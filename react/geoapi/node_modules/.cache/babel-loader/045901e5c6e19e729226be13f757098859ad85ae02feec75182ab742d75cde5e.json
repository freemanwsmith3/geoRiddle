{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/geoRiddle/react/geoapi/src/components/Countries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport useGuess from '../hooks/useGuess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n  },\n\n  link: {\n    margin: theme.spacing(1, 1.5)\n  },\n  cardHeader: {\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700]\n  },\n  countryName: {\n    fontSize: '16px',\n    textAlign: 'left'\n  },\n  countryCapital: {\n    display: 'flex',\n    justifyContent: 'left',\n    alignItems: 'baseline',\n    fontSize: '12px',\n    textAlign: 'left',\n    marginBottom: theme.spacing(2)\n  }\n}));\nconst Countries = props => {\n  _s();\n  const {\n    countries\n  } = props;\n  const {\n    currentGuess,\n    handleKeyup\n  } = useGuess(countries);\n  const classes = useStyles();\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyup);\n    return () => window.removeEventListener('keyup', handleKeyup);\n  }, [handleKeyup]);\n  if (!countries || countries.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Can not find any countries, sorry\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 51\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      component: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        alignItems: \"flex-end\",\n        children: countries.map(country => {\n          return (\n            /*#__PURE__*/\n            // Enterprise card is full width at sm breakpoint\n            _jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: classes.card,\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  className: classes.cardContent,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    gutterBottom: true,\n                    variant: \"h6\",\n                    component: \"h2\",\n                    className: classes.countryName,\n                    children: country.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.countryCapital,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"p\",\n                      color: \"textPrimary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      color: \"textSecondary\",\n                      children: country.capital\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 9\n              }, this)\n            }, country.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 8\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n_s(Countries, \"1qZRbW8ZWUrDB4sz/cZwwBeZsCw=\", false, function () {\n  return [useGuess, useStyles];\n});\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["React","useEffect","makeStyles","Card","CardContent","CardMedia","Grid","Typography","Container","useGuess","useStyles","theme","cardMedia","paddingTop","link","margin","spacing","cardHeader","backgroundColor","palette","type","grey","countryName","fontSize","textAlign","countryCapital","display","justifyContent","alignItems","marginBottom","Countries","props","countries","currentGuess","handleKeyup","classes","window","addEventListener","removeEventListener","length","map","country","card","cardContent","name","capital","id"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/components/Countries.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport useGuess from '../hooks/useGuess';\n\nconst useStyles = makeStyles((theme) => ({\n\tcardMedia: {\n\t\tpaddingTop: '56.25%', // 16:9\n\t},\n\tlink: {\n\t\tmargin: theme.spacing(1, 1.5),\n\t},\n\tcardHeader: {\n\t\tbackgroundColor:\n\t\t\ttheme.palette.type === 'light'\n\t\t\t\t? theme.palette.grey[200]\n\t\t\t\t: theme.palette.grey[700],\n\t},\n\tcountryName: {\n\t\tfontSize: '16px',\n\t\ttextAlign: 'left',\n\t},\n\tcountryCapital: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'left',\n\t\talignItems: 'baseline',\n\t\tfontSize: '12px',\n\t\ttextAlign: 'left',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n}));\n\nconst Countries = (props) => {\n\n\tconst { countries } = props;\n\tconst { currentGuess, handleKeyup } = useGuess(countries)\n\tconst classes = useStyles();\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('keyup', handleKeyup)\n\n\t\treturn () => window.removeEventListener('keyup', handleKeyup)\n\t}, [handleKeyup])\n\n\tif (!countries || countries.length === 0) return <p>Can not find any countries, sorry</p>;\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Container maxWidth=\"md\" component=\"main\">\n\t\t\t\t<Grid container spacing={5} alignItems=\"flex-end\">\n\t\t\t\t\t{countries.map((country) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t// Enterprise card is full width at sm breakpoint\n\t\t\t\t\t\t\t<Grid item key={country.id} xs={12} md={4}>\n\t\t\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t\t\t{/* <CardMedia\n\t\t\t\t\t\t\t\t\t\tclassName={classes.cardMedia}\n\t\t\t\t\t\t\t\t\t\timage=\"https://source.unsplash.com/random\"\n\t\t\t\t\t\t\t\t\t\ttitle=\"Image title\"\n\t\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.countryName}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{country.name}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<div className={classes.countryCapital}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\t\t\t\t\t\t\t></Typography>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t\t\t\t{country.capital}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n};\nexport default Countries;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}