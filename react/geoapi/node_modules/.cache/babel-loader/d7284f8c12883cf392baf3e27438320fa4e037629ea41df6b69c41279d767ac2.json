{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/GeoRiddleGame/georiddle/react/geoapi/src/components/Results.js\";\nimport React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = props => {\n  const {\n    history,\n    answers,\n    finished,\n    classes\n  } = props;\n  if (finished == 'Won' || finished == 'Lost') {\n    for (var i = 0; i < answers.answers.length; i++) {\n      history.push(answers.answers[i].name);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: answers.answers.map((ans, index) => {\n        return history.includes(ans.name) ? /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.listResults,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.listResults,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classes.correct,\n              children: ans.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.listResults,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.listResults,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classes.blank,\n              children: [\"Country Number: \", index + 1]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","Container","Card","CardContent","Results","props","history","answers","finished","classes","i","length","push","name","map","ans","index","includes","listResults","correct","blank"],"sources":["/home/fsmith/GeoRiddleGame/georiddle/react/geoapi/src/components/Results.js"],"sourcesContent":["import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\n\nconst Results = (props) => {\n\n\n\tconst { history, answers, finished, classes } = props;\n\n    if (finished == 'Won' || finished == 'Lost'){\n        for (var i = 0; i < answers.answers.length; i++){\n            history.push(answers.answers[i].name)\n        }\n    }\n    return (\n\t\t<React.Fragment>                    \n            <Container maxWidth=\"md\"  >          \n            {answers.answers.map((ans, index) => {   \n                return history.includes(ans.name) ? ( \n                    <Card  className= {classes.listResults} >\n                        <CardContent className= {classes.listResults}>\n                            <li className={classes.correct} >{ans.name}</li> \n                        </CardContent>\n                    </Card>\n                ) :(\n                    <Card  className= {classes.listResults}>\n                        <CardContent className= {classes.listResults}>\n                            <li className={classes.blank} key={index}>Country Number: {index+1}</li>\n                        </CardContent>\n                    </Card>\n                    )\n                    })}\n            </Container>  \n        </React.Fragment>\n    );\n};\n\nexport default Results"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,+BAA+B;AAAC;AAGxD,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAG1B,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGJ,KAAK;EAElD,IAAIG,QAAQ,IAAI,KAAK,IAAIA,QAAQ,IAAI,MAAM,EAAC;IACxC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACA,OAAO,CAACI,MAAM,EAAED,CAAC,EAAE,EAAC;MAC5CJ,OAAO,CAACM,IAAI,CAACL,OAAO,CAACA,OAAO,CAACG,CAAC,CAAC,CAACG,IAAI,CAAC;IACzC;EACJ;EACA,oBACF,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACL,QAAC,SAAS;MAAC,QAAQ,EAAC,IAAI;MAAA,UACvBN,OAAO,CAACA,OAAO,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QACjC,OAAOV,OAAO,CAACW,QAAQ,CAACF,GAAG,CAACF,IAAI,CAAC,gBAC7B,QAAC,IAAI;UAAE,SAAS,EAAGJ,OAAO,CAACS,WAAY;UAAA,uBACnC,QAAC,WAAW;YAAC,SAAS,EAAGT,OAAO,CAACS,WAAY;YAAA,uBACzC;cAAI,SAAS,EAAET,OAAO,CAACU,OAAQ;cAAA,UAAGJ,GAAG,CAACF;YAAI;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA;QACtC;UAAA;UAAA;UAAA;QAAA,QACX,gBAEP,QAAC,IAAI;UAAE,SAAS,EAAGJ,OAAO,CAACS,WAAY;UAAA,uBACnC,QAAC,WAAW;YAAC,SAAS,EAAGT,OAAO,CAACS,WAAY;YAAA,uBACzC;cAAI,SAAS,EAAET,OAAO,CAACW,KAAM;cAAA,WAAa,kBAAgB,EAACJ,KAAK,GAAC,CAAC;YAAA,GAA/BA,KAAK;cAAA;cAAA;cAAA;YAAA;UAAgC;YAAA;YAAA;YAAA;UAAA;QAC9D;UAAA;UAAA;UAAA;QAAA,QAEjB;MACD,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACC;AAEzB,CAAC;AAAC,KA/BIZ,OAAO;AAiCb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}