{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/geoRiddle/react/geoapi/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Answers from './components/Answers';\nimport AnswersLoadingComponent from './components/AnswersLoading';\nimport RiddleLoadingComponent from './components/RiddleLoading';\nimport axios from 'axios';\nimport { StylesContext } from '@material-ui/styles';\nimport Guess from './components/Guess';\nimport Riddle from './components/Riddle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const AnswersLoading = AnswersLoadingComponent(Guess);\n  const RiddleLoading = RiddleLoadingComponent(Riddle);\n  const [appState, setAppState] = useState({\n    loading: false,\n    countries: null,\n    answers: null\n  });\n  useEffect(() => {\n    setAppState({\n      loading: true\n    });\n    //this is where you should load the answers or probably just get rid of it and use a custom hook\n\n    const loadAnswers = async () => {\n      const countryData = await axios.get('http://127.0.0.1:8000/api/countries/');\n      const answerData = await axios.get('http://127.0.0.1:8000/api/riddles/1');\n      setAppState({\n        loading: false,\n        answers: answerData.data,\n        countries: countryData.data\n      });\n    };\n    loadAnswers();\n  }, [setAppState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(RiddleLoading, {\n      isLoading: appState.loading,\n      answers: appState.answers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AnswersLoading, {\n      isLoading: appState.loading,\n      answers: appState.answers,\n      countries: appState.countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"KvSXbYt6RYB7IlxTiK1MrxN8I1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Answers","AnswersLoadingComponent","RiddleLoadingComponent","axios","StylesContext","Guess","Riddle","App","AnswersLoading","RiddleLoading","appState","setAppState","loading","countries","answers","loadAnswers","countryData","get","answerData","data"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Answers from './components/Answers';\nimport AnswersLoadingComponent from './components/AnswersLoading';\nimport RiddleLoadingComponent from './components/RiddleLoading';\nimport axios from 'axios'\nimport { StylesContext } from '@material-ui/styles';\nimport Guess from './components/Guess';\nimport Riddle from './components/Riddle';\n\nfunction App() {\n\tconst AnswersLoading = AnswersLoadingComponent(Guess);\n\tconst RiddleLoading = RiddleLoadingComponent(Riddle)\n\tconst [appState, setAppState] = useState({\n\t\tloading: false,\n\t\tcountries: null,\n\t\tanswers: null\n\t});\n\n\tuseEffect(() => {\n\t\tsetAppState({ loading: true });\n\t\t//this is where you should load the answers or probably just get rid of it and use a custom hook\n\n\t\tconst loadAnswers = async () => {\n\t\t\tconst countryData = await axios.get('http://127.0.0.1:8000/api/countries/')\n\t\t\tconst answerData = await axios.get('http://127.0.0.1:8000/api/riddles/1')\n\t\t\tsetAppState({ loading: false, answers: answerData.data, countries: countryData.data});\n\t\t}\n\t\tloadAnswers();\n\n\t},[setAppState]);\n\n\n\t\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<RiddleLoading isLoading={appState.loading} answers={appState.answers}/>\n\t\t\t<AnswersLoading isLoading={appState.loading} answers={appState.answers} countries={appState.countries}/>\n\t\t</div>\n\t\t\n\t);\n}\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,uBAAuB,MAAM,6BAA6B;AACjE,OAAOC,sBAAsB,MAAM,4BAA4B;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,qBAAqB;AACnD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAEzC,SAASC,GAAG,GAAG;EAAA;EACd,MAAMC,cAAc,GAAGP,uBAAuB,CAACI,KAAK,CAAC;EACrD,MAAMI,aAAa,GAAGP,sBAAsB,CAACI,MAAM,CAAC;EACpD,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACxCa,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE,IAAI;IACfC,OAAO,EAAE;EACV,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACfa,WAAW,CAAC;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;IAC9B;;IAEA,MAAMG,WAAW,GAAG,YAAY;MAC/B,MAAMC,WAAW,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,sCAAsC,CAAC;MAC3E,MAAMC,UAAU,GAAG,MAAMf,KAAK,CAACc,GAAG,CAAC,qCAAqC,CAAC;MACzEN,WAAW,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEE,OAAO,EAAEI,UAAU,CAACC,IAAI;QAAEN,SAAS,EAAEG,WAAW,CAACG;MAAI,CAAC,CAAC;IACtF,CAAC;IACDJ,WAAW,EAAE;EAEd,CAAC,EAAC,CAACJ,WAAW,CAAC,CAAC;EAIhB,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA,wBACnB,QAAC,aAAa;MAAC,SAAS,EAAED,QAAQ,CAACE,OAAQ;MAAC,OAAO,EAAEF,QAAQ,CAACI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eACxE,QAAC,cAAc;MAAC,SAAS,EAAEJ,QAAQ,CAACE,OAAQ;MAAC,OAAO,EAAEF,QAAQ,CAACI,OAAQ;MAAC,SAAS,EAAEJ,QAAQ,CAACG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACnG;AAGR;AAAC,GA/BQN,GAAG;AAAA,KAAHA,GAAG;AAgCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}