{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/geoRiddle/react/geoapi/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Results from './Results';\nimport Guess from './Guess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({}));\nconst Game = props => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [text, setText] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [boolError, setBoolError] = useState(false);\n  const [helpertext, setHelpertext] = useState([]);\n  const {\n    answers\n  } = props;\n  const {\n    countries\n  } = props;\n  if (!answers || answers.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Can not find any answers, sorry\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 47\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Results, {\n      results: results,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Guess, {\n      suggestions: suggestions,\n      countries: countries,\n      answers: answers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n_s(Game, \"CRFHncUeyZTxzfiOjvlDdV8z0yI=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","makeStyles","TextField","Container","Typography","Button","Card","CardContent","Grid","Results","Guess","useStyles","theme","Game","props","results","setResults","text","setText","suggestions","setSuggestions","history","setHistory","boolError","setBoolError","helpertext","setHelpertext","answers","countries","length"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/components/Game.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField'\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Results from './Results';\nimport Guess from './Guess';\n\nconst useStyles = makeStyles((theme) => ({\n\n\n}));\n\nconst Game = (props) => {\n    const [results, setResults] = useState([])\n\tconst [text, setText] = useState([])\n    const [suggestions, setSuggestions] = useState([])\n    const [history, setHistory] = useState([])\n    const [boolError, setBoolError] = useState(false)\n    const [helpertext, setHelpertext] = useState([])\n\tconst { answers } = props;\n    const { countries } = props;\n\n\n\tif (!answers || answers.length === 0) return <p>Can not find any answers, sorry</p>;\n\treturn (\n\t\t<React.Fragment>\n            <Results results = {results} history = {history}/>\n            <Guess suggestions = {suggestions} countries = {countries} answers={answers}/>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAAC;AAE5B,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAK,KAAM,CAGzC,CAAC,CAAC,CAAC;AAEH,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAM;IAAE2B;EAAQ,CAAC,GAAGb,KAAK;EACtB,MAAM;IAAEc;EAAU,CAAC,GAAGd,KAAK;EAG9B,IAAI,CAACa,OAAO,IAAIA,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE,oBAAO;IAAA,UAAG;EAA+B;IAAA;IAAA;IAAA;EAAA,QAAI;EACnF,oBACC,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACL,QAAC,OAAO;MAAC,OAAO,EAAId,OAAQ;MAAC,OAAO,EAAIM;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eAClD,QAAC,KAAK;MAAC,WAAW,EAAIF,WAAY;MAAC,SAAS,EAAIS,SAAU;MAAC,OAAO,EAAED;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACvE;AAEnB,CAAC;AAAC,GAlBId,IAAI;AAAA,KAAJA,IAAI;AAoBV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}