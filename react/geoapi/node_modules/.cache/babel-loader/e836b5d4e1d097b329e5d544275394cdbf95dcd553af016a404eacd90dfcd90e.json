{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/geoRiddle/react/geoapi/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Answers from './components/Answers';\nimport AnswersLoadingComponent from './components/AnswersLoading';\nimport RiddleLoadingComponent from './components/RiddleLoading';\nimport axios from 'axios';\nimport { StylesContext } from '@material-ui/styles';\nimport Game from './components/Game';\nimport Riddle from './components/Riddle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const AnswersLoading = AnswersLoadingComponent(Riddle);\n  const CountriesLoading = AnswersLoadingComponent(Guess);\n  // const RiddleLoading = RiddleLoadingComponent(Riddle)\n  const [appState, setAppState] = useState({\n    loadingAnswers: true,\n    loadingCountries: true,\n    countries: null,\n    answers: null\n  });\n  useEffect(() => {\n    setAppState({\n      loadingAnswers: true,\n      loadingCountries: true\n    });\n\n    //this is where you should load the answers or probably just get rid of it and use a custom hook\n\n    // const loadAnswers = async () => {\n    // \tconst answerData = await axios.get('http://127.0.0.1:8000/api/riddles/1')\n    // \tsetAppState({ loadingAnswers: false,  answers: answerData.data});\n    // }\n    // loadAnswers();\n\n    const loadCountries = async () => {\n      const countryData = await axios.get('http://127.0.0.1:8000/api/countries/');\n      const answerData = await axios.get('http://127.0.0.1:8000/api/riddles/1');\n      setAppState({\n        loadingCountries: false,\n        answers: answerData.data,\n        countries: countryData.data\n      });\n    };\n    loadCountries();\n  }, [setAppState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AnswersLoading, {\n      isLoading: appState.loadingCountries,\n      answers: appState.answers,\n      countries: appState.countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CountriesLoading, {\n      isLoading: appState.loadingCountries,\n      answers: appState.answers,\n      countries: appState.countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"/6ckQfxRzzOIW1rGcsAVk3xJY6Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Answers","AnswersLoadingComponent","RiddleLoadingComponent","axios","StylesContext","Game","Riddle","App","AnswersLoading","CountriesLoading","Guess","appState","setAppState","loadingAnswers","loadingCountries","countries","answers","loadCountries","countryData","get","answerData","data"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Answers from './components/Answers';\nimport AnswersLoadingComponent from './components/AnswersLoading';\nimport RiddleLoadingComponent from './components/RiddleLoading';\nimport axios from 'axios'\nimport { StylesContext } from '@material-ui/styles';\nimport Game from './components/Game';\nimport Riddle from './components/Riddle';\n\nfunction App() {\n\tconst AnswersLoading = AnswersLoadingComponent(Riddle);\n\tconst CountriesLoading = AnswersLoadingComponent(Guess)\n\t// const RiddleLoading = RiddleLoadingComponent(Riddle)\n\tconst [appState, setAppState] = useState({\n\t\tloadingAnswers: true,\n\t\tloadingCountries: true,\n\t\tcountries: null,\n\t\tanswers: null\n\t});\n\n\tuseEffect(() => {\n\t\tsetAppState({ loadingAnswers: true,  loadingCountries: true });\n\n\t\t//this is where you should load the answers or probably just get rid of it and use a custom hook\n\n\t\t// const loadAnswers = async () => {\n\t\t// \tconst answerData = await axios.get('http://127.0.0.1:8000/api/riddles/1')\n\t\t// \tsetAppState({ loadingAnswers: false,  answers: answerData.data});\n\t\t// }\n\t\t// loadAnswers();\n\n\t\tconst loadCountries = async () => {\n\t\t\tconst countryData = await axios.get('http://127.0.0.1:8000/api/countries/')\n\t\t\tconst answerData = await axios.get('http://127.0.0.1:8000/api/riddles/1')\n\t\t\tsetAppState({ loadingCountries: false, answers: answerData.data, countries: countryData.data});\n\t\t}\n\t\tloadCountries();\n\n\t},[setAppState]);\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{/* <RiddleLoading isLoading={appState.loadingAnswers} answers={appState.answers}/> */}\n\t\t\t<AnswersLoading isLoading={appState.loadingCountries} answers={appState.answers} countries={appState.countries}/>\n\t\t\t<CountriesLoading isLoading={appState.loadingCountries} answers={appState.answers} countries={appState.countries}/>\n\t\t</div>\n\t\t\n\t);\n}\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,uBAAuB,MAAM,6BAA6B;AACjE,OAAOC,sBAAsB,MAAM,4BAA4B;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,qBAAqB;AACnD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAEzC,SAASC,GAAG,GAAG;EAAA;EACd,MAAMC,cAAc,GAAGP,uBAAuB,CAACK,MAAM,CAAC;EACtD,MAAMG,gBAAgB,GAAGR,uBAAuB,CAACS,KAAK,CAAC;EACvD;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACxCc,cAAc,EAAE,IAAI;IACpBC,gBAAgB,EAAE,IAAI;IACtBC,SAAS,EAAE,IAAI;IACfC,OAAO,EAAE;EACV,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACfc,WAAW,CAAC;MAAEC,cAAc,EAAE,IAAI;MAAGC,gBAAgB,EAAE;IAAK,CAAC,CAAC;;IAE9D;;IAEA;IACA;IACA;IACA;IACA;;IAEA,MAAMG,aAAa,GAAG,YAAY;MACjC,MAAMC,WAAW,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,sCAAsC,CAAC;MAC3E,MAAMC,UAAU,GAAG,MAAMjB,KAAK,CAACgB,GAAG,CAAC,qCAAqC,CAAC;MACzEP,WAAW,CAAC;QAAEE,gBAAgB,EAAE,KAAK;QAAEE,OAAO,EAAEI,UAAU,CAACC,IAAI;QAAEN,SAAS,EAAEG,WAAW,CAACG;MAAI,CAAC,CAAC;IAC/F,CAAC;IACDJ,aAAa,EAAE;EAEhB,CAAC,EAAC,CAACL,WAAW,CAAC,CAAC;EAGhB,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA,wBAEnB,QAAC,cAAc;MAAC,SAAS,EAAED,QAAQ,CAACG,gBAAiB;MAAC,OAAO,EAAEH,QAAQ,CAACK,OAAQ;MAAC,SAAS,EAAEL,QAAQ,CAACI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eACjH,QAAC,gBAAgB;MAAC,SAAS,EAAEJ,QAAQ,CAACG,gBAAiB;MAAC,OAAO,EAAEH,QAAQ,CAACK,OAAQ;MAAC,SAAS,EAAEL,QAAQ,CAACI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9G;AAGR;AAAC,GAxCQR,GAAG;AAAA,KAAHA,GAAG;AAyCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}