{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/GeoRiddleGame/georiddle/react/geoapi/src/components/Riddle.js\";\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Container } from '@material-ui/core';\nimport { Card } from '@material-ui/core';\nimport { CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Riddle = props => {\n  const {\n    finished,\n    answers,\n    classes,\n    riddleHeaderClass,\n    strikes,\n    guesses\n  } = props;\n  console.log(finished);\n  const headerText = 'Remaining: ' + (answers.answers.length + strikes.length) + ' Countries || ' + (3 - strikes.length) + ' Strikes';\n  if (finished === 'Lost') {\n    headerText = 'You Lost';\n  }\n  if (finished === 'Won') {\n    headerText = 'Winner';\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"resultCard\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"result\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.riddleFirst,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.riddleHeader,\n              children: [\"GeoRiddle #\", answers.id, \": \", answers.question]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.riddleSecond,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: riddleHeaderClass,\n              children: headerText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = Riddle;\nexport default Riddle;\nvar _c;\n$RefreshReg$(_c, \"Riddle\");","map":{"version":3,"names":["React","useState","Typography","Container","Card","CardContent","makeStyles","Riddle","props","finished","answers","classes","riddleHeaderClass","strikes","guesses","console","log","headerText","length","riddleFirst","riddleHeader","id","question","riddleSecond"],"sources":["/home/fsmith/GeoRiddleGame/georiddle/react/geoapi/src/components/Riddle.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Container } from '@material-ui/core';\nimport {Card} from '@material-ui/core';\nimport {CardContent} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst Riddle = (props) => {\n    \n    const {finished, answers,  classes, riddleHeaderClass, strikes, guesses} = props;\n    console.log(finished)\n\n    const headerText = 'Remaining: ' + (answers.answers.length + strikes.length) + ' Countries || ' + (3-strikes.length) + ' Strikes';\n\n    if (finished === 'Lost'){\n        headerText = 'You Lost'\n    }\n    if (finished === 'Won'){\n        headerText = 'Winner'\n    }\n    \n\n    return (\n    <React.Fragment>\n        <Container maxWidth=\"md\"  >\n            <Card className=\"resultCard\">\n                <CardContent className=\"result\">\n                    <div className={classes.riddleFirst}>\n                        <Typography \n                        className={classes.riddleHeader}>\n                            GeoRiddle #{answers.id}: {answers.question}\n                        </Typography>\n                    </div>\n                    <div className={classes.riddleSecond}>\n                        <Typography \n                        className={riddleHeaderClass}>\n                            {headerText}\n                        </Typography>\n                    </div>\n                </CardContent>\n            </Card>\n        </Container>\n    </React.Fragment>\n    );\n}\n\nexport default Riddle\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,8BAA8B;AACrD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAAQC,IAAI,QAAO,mBAAmB;AACtC,SAAQC,WAAW,QAAO,mBAAmB;AAC7C,SAASC,UAAU,QAAQ,0BAA0B;AAAC;AAItD,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAEtB,MAAM;IAACC,QAAQ;IAAEC,OAAO;IAAGC,OAAO;IAAEC,iBAAiB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGN,KAAK;EAChFO,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EAErB,MAAMQ,UAAU,GAAG,aAAa,IAAIP,OAAO,CAACA,OAAO,CAACQ,MAAM,GAAGL,OAAO,CAACK,MAAM,CAAC,GAAG,gBAAgB,IAAI,CAAC,GAACL,OAAO,CAACK,MAAM,CAAC,GAAG,UAAU;EAEjI,IAAIT,QAAQ,KAAK,MAAM,EAAC;IACpBQ,UAAU,GAAG,UAAU;EAC3B;EACA,IAAIR,QAAQ,KAAK,KAAK,EAAC;IACnBQ,UAAU,GAAG,QAAQ;EACzB;EAGA,oBACA,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACX,QAAC,SAAS;MAAC,QAAQ,EAAC,IAAI;MAAA,uBACpB,QAAC,IAAI;QAAC,SAAS,EAAC,YAAY;QAAA,uBACxB,QAAC,WAAW;UAAC,SAAS,EAAC,QAAQ;UAAA,wBAC3B;YAAK,SAAS,EAAEN,OAAO,CAACQ,WAAY;YAAA,uBAChC,QAAC,UAAU;cACX,SAAS,EAAER,OAAO,CAACS,YAAa;cAAA,WAAC,aAClB,EAACV,OAAO,CAACW,EAAE,EAAC,IAAE,EAACX,OAAO,CAACY,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA;UACjC;YAAA;YAAA;YAAA;UAAA,QACX,eACN;YAAK,SAAS,EAAEX,OAAO,CAACY,YAAa;YAAA,uBACjC,QAAC,UAAU;cACX,SAAS,EAAEX,iBAAkB;cAAA,UACxBK;YAAU;cAAA;cAAA;cAAA;YAAA;UACF;YAAA;YAAA;YAAA;UAAA,QACX;QAAA;UAAA;UAAA;UAAA;QAAA;MACI;QAAA;QAAA;QAAA;MAAA;IACX;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACC;AAErB,CAAC;AAAA,KArCKV,MAAM;AAuCZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}