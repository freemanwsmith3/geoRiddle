{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/geoRiddle/react/geoapi/src/components/CorrectResult.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  suggestion: {\n    cursor: 'pointer',\n    borderLeft: '1px solid black',\n    borderRight: '1px solid black',\n    borderBottom: '1px solid black',\n    borderTop: '1px solid black',\n    background: 'white',\n    '&:hover': {\n      background: \"gray\"\n    }\n  },\n  correct: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    fontSize: '24px',\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    color: 'green'\n  },\n  incorrect: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    fontSize: '24px',\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    color: 'red'\n  }\n}));\nconst CorrectResult = props => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [text, setText] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [boolError, setBoolError] = useState(false);\n  const [helpertext, setHelpertext] = useState([]);\n  const {\n    answers\n  } = props;\n  const {\n    countries\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      component: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"resultCard\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"result\",\n          children: results.map((visible, index) => {\n            return visible ? /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classes.correct,\n              children: history[index]\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classes.incorrect,\n              children: history[index]\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n_s(CorrectResult, \"3VNH05cSmLeKO+qtP8y6HzkYwiE=\", false, function () {\n  return [useStyles];\n});\n_c = CorrectResult;\nexport default CorrectResult;\nvar _c;\n$RefreshReg$(_c, \"CorrectResult\");","map":{"version":3,"names":["React","useEffect","useState","makeStyles","TextField","Container","Typography","Button","Card","CardContent","Grid","useStyles","theme","suggestion","cursor","borderLeft","borderRight","borderBottom","borderTop","background","correct","display","justifyContent","alignItems","fontSize","textAlign","marginBottom","spacing","color","incorrect","CorrectResult","props","results","setResults","text","setText","suggestions","setSuggestions","history","setHistory","boolError","setBoolError","helpertext","setHelpertext","answers","countries","classes","map","visible","index"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/components/CorrectResult.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField'\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n\tsuggestion: {\n        \n\t\tcursor: 'pointer',\n        borderLeft: '1px solid black',\n        borderRight: '1px solid black',\n        borderBottom: '1px solid black',\n        borderTop: '1px solid black',\n        background: 'white',\n        '&:hover': {\n            background: \"gray\",\n        }\n\t},\n\n    correct: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        fontSize: '24px',\n        textAlign: 'center',\n        marginBottom: theme.spacing(2),\n        color: 'green'\n    },\n\n    incorrect: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        fontSize: '24px',\n        textAlign: 'center',\n        marginBottom: theme.spacing(2),\n        color: 'red'\n    }, \n    \n\n}));\n\nconst CorrectResult = (props) => {\n    const [results, setResults] = useState([])\n\tconst [text, setText] = useState([])\n    const [suggestions, setSuggestions] = useState([])\n    const [history, setHistory] = useState([])\n    const [boolError, setBoolError] = useState(false)\n    const [helpertext, setHelpertext] = useState([])\n\tconst { answers } = props;\n    const { countries } = props;\n    const classes = useStyles();\n\n    return (\n\t\t<React.Fragment>\n\n\t\t\t<Container maxWidth=\"md\" component=\"main\" >\n                <Card className=\"resultCard\">\n                    <CardContent className=\"result\">\n                        {results.map((visible, index) => {    \n                            return visible ? ( \n                                <li  className={classes.correct} key = {index}>{history[index]}</li> \n                                ) :(\n                                <li  className={classes.incorrect} key = {index}>{history[index]}</li>\n                            )\n                        })}\n                    </CardContent>\n                </Card>\n            </Container>\n        </React.Fragment>\n    );\n};\n\nexport default CorrectResult"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}