{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/geoRiddle/react/geoapi/src/components/RiddleLoading.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RiddleLoading(Component) {\n  return function RiddleLoadingComponent(_ref) {\n    let {\n      isLoading,\n      ...props\n    } = _ref;\n    console.log(\"riddle isLoad\", isLoading);\n    if (!isLoading) return /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 26\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '25px'\n      },\n      children: \"We are waiting for the geoRiddle to load!...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this);\n  };\n}\n_c = RiddleLoading;\nexport default RiddleLoading;\nvar _c;\n$RefreshReg$(_c, \"RiddleLoading\");","map":{"version":3,"names":["React","RiddleLoading","Component","RiddleLoadingComponent","isLoading","props","console","log","fontSize"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/components/RiddleLoading.js"],"sourcesContent":["import React from 'react';\n\nfunction RiddleLoading(Component) {\n\treturn function RiddleLoadingComponent({ isLoading, ...props }) {\n        console.log(\"riddle isLoad\", isLoading)\n\t\tif (!isLoading) return <Component {...props} />;\n\t\treturn (\n\t\t\t<p style={{ fontSize: '25px' }}>\n\t\t\t\tWe are waiting for the geoRiddle to load!...\n\t\t\t</p>\n\t\t);\n\t};\n}\nexport default RiddleLoading;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,aAAa,CAACC,SAAS,EAAE;EACjC,OAAO,SAASC,sBAAsB,OAA0B;IAAA,IAAzB;MAAEC,SAAS;MAAE,GAAGC;IAAM,CAAC;IACvDC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,SAAS,CAAC;IAC7C,IAAI,CAACA,SAAS,EAAE,oBAAO,QAAC,SAAS;MAAA,GAAKC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI;IAC/C,oBACC;MAAG,KAAK,EAAE;QAAEG,QAAQ,EAAE;MAAO,CAAE;MAAA,UAAC;IAEhC;MAAA;MAAA;MAAA;IAAA,QAAI;EAEN,CAAC;AACF;AAAC,KAVQP,aAAa;AAWtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}