{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/GeoRiddleGame/georiddle/react/geoapi/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport CountriesLoadingComponent from './components/CountriesLoading';\nimport axios from 'axios';\nimport Game from './components/Game';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const AnswersLoading = AnswersLoadingComponent(Riddle);\n  const CountriesLoading = CountriesLoadingComponent(Game);\n  // const RiddleLoading = RiddleLoadingComponent(Riddle)\n\n  const startDate = new Date('February 12, 2023 00:00:00');\n  const currentDate = new Date();\n  const riddleID = Math.ceil((currentDate - startDate) / 86400000); // find the riddle id by subtracting the number of days, dividing by milliseconds and rounding up\n  const [appState, setAppState] = useState({\n    loadingAnswers: true,\n    loadingCountries: true,\n    loadingGuesses: true,\n    countries: null,\n    answers: null,\n    guesses: null\n  });\n  useEffect(() => {\n    setAppState({\n      loadingAnswers: true,\n      loadingCountries: true,\n      loadingGuesses: true\n    });\n\n    //this is where you should load the answers or probably just get rid of it and use a custom hook\n\n    // const loadAnswers = async () => {\n    // \tconst answerData = await axios.get('http://127.0.0.1:8000/api/riddles/1')\n    // \tsetAppState({ loadingAnswers: false,  answers: answerData.data});\n    // }\n    // loadAnswers();\n\n    const loadData = async () => {\n      const countryData = await axios.get('http://127.0.0.1:8000/api/countries/');\n      const guessData = await axios.get('http://127.0.0.1:8000/api/guesses/' + riddleID);\n      const answerData = await axios.get('http://127.0.0.1:8000/api/riddles/' + riddleID);\n      setAppState({\n        loadingCountries: false,\n        answers: answerData.data,\n        countries: countryData.data,\n        guesses: guessData.data\n      });\n    };\n    loadData();\n  }, [setAppState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CountriesLoading, {\n      isLoading: appState.loadingCountries,\n      answers: appState.answers,\n      countries: appState.countries,\n      guess: appState.guesses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"1jhQlOpJ9hBsJL79tTzVrlkUUTc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CountriesLoadingComponent","axios","Game","App","CountriesLoading","startDate","Date","currentDate","riddleID","Math","ceil","appState","setAppState","loadingAnswers","loadingCountries","loadingGuesses","countries","answers","guesses","loadData","countryData","get","guessData","answerData","data"],"sources":["/home/fsmith/GeoRiddleGame/georiddle/react/geoapi/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport CountriesLoadingComponent from './components/CountriesLoading';\nimport axios from 'axios'\n\nimport Game from './components/Game';\n\nfunction App() {\n\t// const AnswersLoading = AnswersLoadingComponent(Riddle);\n\tconst CountriesLoading = CountriesLoadingComponent(Game)\n\t// const RiddleLoading = RiddleLoadingComponent(Riddle)\n\n\tconst startDate = new Date('February 12, 2023 00:00:00');\n\tconst currentDate = new Date();\n\n\tconst riddleID = Math.ceil((currentDate-startDate)/86400000) // find the riddle id by subtracting the number of days, dividing by milliseconds and rounding up\n\tconst [appState, setAppState] = useState({\n\t\tloadingAnswers: true,\n\t\tloadingCountries: true,\n\t\tloadingGuesses: true,\n\t\tcountries: null,\n\t\tanswers: null, \n\t\tguesses: null\n\t});\n\n\tuseEffect(() => {\n\t\t\n\t\tsetAppState({ loadingAnswers: true,  loadingCountries: true, loadingGuesses: true });\n\n\t\t//this is where you should load the answers or probably just get rid of it and use a custom hook\n\n\t\t// const loadAnswers = async () => {\n\t\t// \tconst answerData = await axios.get('http://127.0.0.1:8000/api/riddles/1')\n\t\t// \tsetAppState({ loadingAnswers: false,  answers: answerData.data});\n\t\t// }\n\t\t// loadAnswers();\n\n\t\tconst loadData = async () => {\n\t\t\tconst countryData = await axios.get('http://127.0.0.1:8000/api/countries/');\n\t\t\tconst guessData = await axios.get('http://127.0.0.1:8000/api/guesses/' + riddleID);\n\t\t\tconst answerData = await axios.get('http://127.0.0.1:8000/api/riddles/' + riddleID);\n\t\t\tsetAppState({ loadingCountries: false, answers: answerData.data, countries: countryData.data, guesses: guessData.data});\n\t\t}\n\t\tloadData();\n\n\t},[setAppState]);\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{/* <RiddleLoading isLoading={appState.loadingAnswers} answers={appState.answers}/> */}\n\t\t\t{/* <AnswersLoading isLoading={appState.loadingCountries} answers={appState.answers} countries={appState.countries}/> */}\n\t\t\t<CountriesLoading isLoading={appState.loadingCountries} answers={appState.answers} countries={appState.countries} guess={appState.guesses}/>\n\t\t</div>\n\t\t\n\t);\n}\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAElB,OAAOC,yBAAyB,MAAM,+BAA+B;AACrE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,IAAI,MAAM,mBAAmB;AAAC;AAErC,SAASC,GAAG,GAAG;EAAA;EACd;EACA,MAAMC,gBAAgB,GAAGJ,yBAAyB,CAACE,IAAI,CAAC;EACxD;;EAEA,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAAC,4BAA4B,CAAC;EACxD,MAAMC,WAAW,GAAG,IAAID,IAAI,EAAE;EAE9B,MAAME,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAAC,CAACH,WAAW,GAACF,SAAS,IAAE,QAAQ,CAAC,EAAC;EAC7D,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACxCc,cAAc,EAAE,IAAI;IACpBC,gBAAgB,EAAE,IAAI;IACtBC,cAAc,EAAE,IAAI;IACpBC,SAAS,EAAE,IAAI;IACfC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE;EACV,CAAC,CAAC;EAEFpB,SAAS,CAAC,MAAM;IAEfc,WAAW,CAAC;MAAEC,cAAc,EAAE,IAAI;MAAGC,gBAAgB,EAAE,IAAI;MAAEC,cAAc,EAAE;IAAK,CAAC,CAAC;;IAEpF;;IAEA;IACA;IACA;IACA;IACA;;IAEA,MAAMI,QAAQ,GAAG,YAAY;MAC5B,MAAMC,WAAW,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,sCAAsC,CAAC;MAC3E,MAAMC,SAAS,GAAG,MAAMrB,KAAK,CAACoB,GAAG,CAAC,oCAAoC,GAAGb,QAAQ,CAAC;MAClF,MAAMe,UAAU,GAAG,MAAMtB,KAAK,CAACoB,GAAG,CAAC,oCAAoC,GAAGb,QAAQ,CAAC;MACnFI,WAAW,CAAC;QAAEE,gBAAgB,EAAE,KAAK;QAAEG,OAAO,EAAEM,UAAU,CAACC,IAAI;QAAER,SAAS,EAAEI,WAAW,CAACI,IAAI;QAAEN,OAAO,EAAEI,SAAS,CAACE;MAAI,CAAC,CAAC;IACxH,CAAC;IACDL,QAAQ,EAAE;EAEX,CAAC,EAAC,CAACP,WAAW,CAAC,CAAC;EAGhB,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA,uBAGnB,QAAC,gBAAgB;MAAC,SAAS,EAAED,QAAQ,CAACG,gBAAiB;MAAC,OAAO,EAAEH,QAAQ,CAACM,OAAQ;MAAC,SAAS,EAAEN,QAAQ,CAACK,SAAU;MAAC,KAAK,EAAEL,QAAQ,CAACO;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QACvI;AAGR;AAAC,GAjDQf,GAAG;AAAA,KAAHA,GAAG;AAkDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}