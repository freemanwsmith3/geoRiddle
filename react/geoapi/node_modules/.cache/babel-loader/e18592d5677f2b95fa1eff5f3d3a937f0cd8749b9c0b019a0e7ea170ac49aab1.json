{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useGuess = countries => {\n  _s();\n  const [turn, setTurn] = useState(0);\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [guesses, setGuesses] = useState([]); // past guesses as an array\n  const [History, setHistory] = useState([]); //past guesses as string  difference is used for checking repeats\n  const [isComplete, setIsComplete] = useState(false);\n  // add new guess to guesses state\n  // update the iscorrect state if the guess is correct\n  // add one to turn state\n  const addNewGuess = () => {};\n\n  // handle keyup event adn track current guess\n  // if user presses enter add the new guess\n  const handleKeyup = _ref => {\n    let {\n      key\n    } = _ref;\n  };\n  return {\n    turn,\n    currentGuess,\n    guesses,\n    isComplete,\n    handleKeyup\n  };\n};\n_s(useGuess, \"/9I9k7YE7Zy4U1h7dHUqvG4h2tA=\");\nexport default useGuess;","map":{"version":3,"names":["useState","useGuess","countries","turn","setTurn","currentGuess","setCurrentGuess","guesses","setGuesses","History","setHistory","isComplete","setIsComplete","addNewGuess","handleKeyup","key"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/hooks/useGuess.js"],"sourcesContent":["import { useState } from \"react\"\n\nconst useGuess = (countries) => {\n    const [turn, setTurn] = useState(0)\n    const [currentGuess, setCurrentGuess] = useState('')\n    const [guesses, setGuesses] = useState([]) // past guesses as an array\n    const [History, setHistory] = useState([]) //past guesses as string  difference is used for checking repeats\n    const [isComplete, setIsComplete] = useState(false)\n    // add new guess to guesses state\n    // update the iscorrect state if the guess is correct\n    // add one to turn state\n    const addNewGuess = () => {\n\n    }\n\n    // handle keyup event adn track current guess\n    // if user presses enter add the new guess\n    const handleKeyup = ({ key }) => {\n\n    }\n    return {turn, currentGuess, guesses, isComplete, handleKeyup}\n\n}\n\nexport default useGuess"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,QAAQ,GAAIC,SAAS,IAAK;EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,EAAC;EAC3C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,EAAC;EAC3C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD;EACA;EACA;EACA,MAAMa,WAAW,GAAG,MAAM,CAE1B,CAAC;;EAED;EACA;EACA,MAAMC,WAAW,GAAG,QAAa;IAAA,IAAZ;MAAEC;IAAI,CAAC;EAE5B,CAAC;EACD,OAAO;IAACZ,IAAI;IAAEE,YAAY;IAAEE,OAAO;IAAEI,UAAU;IAAEG;EAAW,CAAC;AAEjE,CAAC;AAAA,GApBKb,QAAQ;AAsBd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}