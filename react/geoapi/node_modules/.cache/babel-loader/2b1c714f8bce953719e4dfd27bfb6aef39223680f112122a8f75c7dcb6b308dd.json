{"ast":null,"code":"var _jsxFileName = \"/home/fsmith/geoRiddle/react/geoapi/src/components/Results.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  suggestion: {\n    cursor: 'pointer',\n    borderLeft: '1px solid black',\n    borderRight: '1px solid black',\n    borderBottom: '1px solid black',\n    borderTop: '1px solid black',\n    background: 'white',\n    '&:hover': {\n      background: \"gray\"\n    }\n  },\n  correct: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    fontSize: '24px',\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    color: 'green',\n    borderColor: 'green',\n    borderLeft: '1px solid ',\n    borderRight: '1px solid ',\n    borderBottom: '1px solid ',\n    borderTop: '1px solid '\n  },\n  blank: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    fontSize: '24px',\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    color: 'red',\n    borderColor: 'black',\n    borderLeft: '1px solid ',\n    borderRight: '1px solid ',\n    borderBottom: '1px solid ',\n    borderTop: '1px solid '\n  }\n}));\nconst Results = props => {\n  _s();\n  const {\n    history\n  } = props;\n  const {\n    results\n  } = props;\n  const {\n    answers\n  } = props;\n  console.log(results);\n  console.log('ok', answers.answers[0].name);\n  const classes = useStyles();\n  console.log('history: ', history[0]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: answers.answers.map((ans, index) => {\n      console.log('an', ans.name);\n      console.log('index', index);\n      console.log('din', history[index]);\n      return history.includes(ans.name) ? /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        component: \"main\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.result,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classes.correct,\n              children: ans.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        component: \"main\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.result,\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: classes.blank,\n              children: [\"Country number \", index]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n_s(Results, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useEffect","useState","makeStyles","TextField","Container","Typography","Button","Card","CardContent","Grid","useStyles","theme","suggestion","cursor","borderLeft","borderRight","borderBottom","borderTop","background","correct","display","justifyContent","alignItems","fontSize","textAlign","marginBottom","spacing","color","borderColor","blank","Results","props","history","results","answers","console","log","name","classes","map","ans","index","includes","result"],"sources":["/home/fsmith/geoRiddle/react/geoapi/src/components/Results.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField'\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n\tsuggestion: {\n        \n\t\tcursor: 'pointer',\n        borderLeft: '1px solid black',\n        borderRight: '1px solid black',\n        borderBottom: '1px solid black',\n        borderTop: '1px solid black',\n        background: 'white',\n        '&:hover': {\n            background: \"gray\",\n        }\n\t},\n\n    correct: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        fontSize: '24px',\n        textAlign: 'center',\n        marginBottom: theme.spacing(2),\n        color: 'green',\n        borderColor: 'green',\n        borderLeft: '1px solid ',\n        borderRight: '1px solid ',\n        borderBottom: '1px solid ',\n        borderTop: '1px solid ',\n    },\n\n    blank: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        fontSize: '24px',\n        textAlign: 'center',\n        marginBottom: theme.spacing(2),\n        color: 'red',\n        borderColor: 'black',\n        borderLeft: '1px solid ',\n        borderRight: '1px solid ',\n        borderBottom: '1px solid ',\n        borderTop: '1px solid ',\n    }, \n\n\n}));\n\nconst Results = (props) => {\n\n\tconst { history } = props;\n    const { results } = props;\n    const { answers } = props;\n    console.log(results)\n    console.log('ok', answers.answers[0].name)\n    const classes = useStyles();\n    console.log('history: ', history[0])\n\n    return (\n\t\t<React.Fragment>                    \n            \n            {answers.answers.map((ans, index) => {   \n                console.log('an', ans.name)\n                console.log('index', index)\n                console.log('din', history[index]) \n                return history.includes(ans.name) ? ( \n                    <Container maxWidth=\"md\" component=\"main\" >\n                        <Card >\n                            <CardContent className= {classes.result}>\n                                        <li  className={classes.correct} >{ans.name}</li> \n                            </CardContent>\n                        </Card>\n                    </Container>  \n                    ) :(\n                    <Container maxWidth=\"md\" component=\"main\" >\n                        <Card >\n                            <CardContent className= {classes.result}>\n                            <li  className={classes.blank} key = {index}>Country number {index}</li>\n                            </CardContent>\n                        </Card>\n                    </Container>  \n                        )\n                         })}\n\n        </React.Fragment>\n    );\n};\n\nexport default Results"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}